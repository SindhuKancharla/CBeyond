/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import code.GetAllFeatures;
import gate.creole.ResourceInstantiationException;
import static gui.TabbedFrame.colorList;
import static gui.TabbedFrame.sourceFile;
import static gui.TabbedFrame.upcCodesList;
import java.awt.event.ItemEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Scanner;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import static javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Sandhya
 */
public class PanelsGUI extends javax.swing.JFrame {

    /**
     * Creates new form PanelsGUI
     */
   // static List<String> categoryList=new ArrayList<String>();
    
    //Category Id Block
    static String categoryFile="Completed_Category_ID_List_Longer_Version_Final.xlsx";
    static List CategorySelctedValueList=new ArrayList();
    final int categoryFileRowsStartingFrom=2;
    static DefaultListModel listModel;
    
    
    //Files Export Block
    static String sourceFile,destFile,upcFile,upcFileDelimiter;
    final int SourceFileRowsStartingFrom=2;
    final int OutputFileRowsStartingFrom=3;
    
    //UPC CODE Set
    static Set<String> upcCodes=new LinkedHashSet<String>();
    
    public PanelsGUI() {
        initComponents();
        
        //Enter Categories in List
        listModel=new DefaultListModel();
        fillCategoryIdList();
        
        categoryList.setSelectionMode(MULTIPLE_INTERVAL_SELECTION);
        categoryList.setModel(listModel);
        //end
        
        progressBar.setVisible(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        addAmoutTextField = new javax.swing.JTextField();
        subtractAmoutTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        multiplyPriceTextField = new javax.swing.JTextField();
        dividePriceTextField = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        percentIncresePriceTextField = new javax.swing.JTextField();
        percentDecresePriceTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        sourceFilePathTextField = new javax.swing.JTextField();
        destFilePathTextField = new javax.swing.JTextField();
        upcFilePathTextField = new javax.swing.JTextField();
        upcDelimiterTextField = new javax.swing.JTextField();
        sorceFileSelectButton = new javax.swing.JButton();
        destFileSelectButton = new javax.swing.JButton();
        upcFileSelectButton = new javax.swing.JButton();
        sourceFileErrorLabel = new javax.swing.JLabel();
        destFileErrorLabel = new javax.swing.JLabel();
        upcFileErrorLabel = new javax.swing.JLabel();
        upcFileDelimiterErrorLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        MSRPCheckBox = new javax.swing.JCheckBox();
        sellingPriceCheckBox = new javax.swing.JCheckBox();
        salePriceCheckBox = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoryList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        stausTextField = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(171, 171, 171));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        submitButton.setFont(new java.awt.Font("Tahoma", 1, 18));
        submitButton.setText("Submit");
        submitButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(225, 225, 225));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose the Rule Type(Action )to apply to the choosen category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Addition/Subtraction", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel6.setText("Increase Price by a fixed amount");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel7.setText("Decrease Price by a fixed amount");

        addAmoutTextField.setText("                      ");
        addAmoutTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        subtractAmoutTextField.setText("                  ");
        subtractAmoutTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        subtractAmoutTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractAmoutTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(addAmoutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(subtractAmoutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel6, jLabel7});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addAmoutTextField, subtractAmoutTextField});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(addAmoutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(subtractAmoutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel6, jLabel7});

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Multiply/Divide", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel9.setText("Multiply Price by");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel10.setText("Divide Price by");

        multiplyPriceTextField.setText("                      ");
        multiplyPriceTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        dividePriceTextField.setText("                      ");
        dividePriceTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dividePriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dividePriceTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(84, 84, 84)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(multiplyPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dividePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel9});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(multiplyPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dividePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Percentage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel12.setText("Increase Price by following Percentage");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel13.setText("Decrease Price by following Percentage");

        percentIncresePriceTextField.setText("                     ");
        percentIncresePriceTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        percentDecresePriceTextField.setText("                     ");
        percentDecresePriceTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(percentDecresePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(percentIncresePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel12, jLabel13});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(percentIncresePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(percentDecresePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(225, 225, 225));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Export File Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jPanel5.setForeground(java.awt.Color.red);

        jLabel14.setBackground(new java.awt.Color(204, 153, 0));
        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel14.setText("Enter Source File Path");

        jLabel15.setBackground(new java.awt.Color(204, 153, 0));
        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel15.setText("Enter Destination File Path");

        jLabel16.setBackground(new java.awt.Color(204, 153, 0));
        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel16.setText("Enter UPC File Path");

        jLabel17.setBackground(new java.awt.Color(204, 153, 0));
        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel17.setText("Enter UPC File Deilimiter");

        sourceFilePathTextField.setFont(new java.awt.Font("Tahoma", 0, 17));
        sourceFilePathTextField.setText("                     ");
        sourceFilePathTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        destFilePathTextField.setFont(new java.awt.Font("Tahoma", 0, 17));
        destFilePathTextField.setText("                     ");
        destFilePathTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        upcFilePathTextField.setFont(new java.awt.Font("Tahoma", 0, 17));
        upcFilePathTextField.setText("                     ");
        upcFilePathTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        upcDelimiterTextField.setFont(new java.awt.Font("Tahoma", 0, 17));
        upcDelimiterTextField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        upcDelimiterTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upcDelimiterTextFieldActionPerformed(evt);
            }
        });

        sorceFileSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cbeyondgui2/images/FilesS-icon.png"))); // NOI18N
        sorceFileSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sorceFileSelectButtonActionPerformed(evt);
            }
        });

        destFileSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cbeyondgui2/images/FilesS-icon.png"))); // NOI18N
        destFileSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destFileSelectButtonActionPerformed(evt);
            }
        });

        upcFileSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cbeyondgui2/images/FilesS-icon.png"))); // NOI18N
        upcFileSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upcFileSelectButtonActionPerformed(evt);
            }
        });

        sourceFileErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 18));
        sourceFileErrorLabel.setForeground(java.awt.Color.red);
        sourceFileErrorLabel.setText("             ");

        destFileErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 18));
        destFileErrorLabel.setForeground(java.awt.Color.red);
        destFileErrorLabel.setText("               ");

        upcFileErrorLabel.setFont(new java.awt.Font("Tahoma", 2, 18));
        upcFileErrorLabel.setForeground(java.awt.Color.red);
        upcFileErrorLabel.setText("             ");

        upcFileDelimiterErrorLabel.setForeground(java.awt.Color.red);
        upcFileDelimiterErrorLabel.setText("                 ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addGap(83, 83, 83)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(sourceFilePathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                    .addComponent(destFilePathTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                    .addComponent(upcFilePathTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                    .addComponent(upcDelimiterTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE))
                                .addGap(49, 49, 49))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(upcFileSelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(destFileSelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sorceFileSelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sourceFileErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(destFileErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(upcFileErrorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(upcFileDelimiterErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(sourceFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sorceFileSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(destFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(destFileSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(sourceFileErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(upcFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(upcDelimiterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(upcFileSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(destFileErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(upcFileErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(upcFileDelimiterErrorLabel))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {destFileErrorLabel, upcFileDelimiterErrorLabel, upcFileErrorLabel});

        jPanel3.setBackground(new java.awt.Color(225, 225, 225));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose price type to be modified", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 0, 0))); // NOI18N

        MSRPCheckBox.setFont(new java.awt.Font("Tahoma", 0, 18));
        MSRPCheckBox.setText("     MSRP");
        MSRPCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MSRPCheckBoxStateChanged(evt);
            }
        });
        MSRPCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                MSRPCheckBoxItemStateChanged(evt);
            }
        });
        MSRPCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MSRPCheckBoxActionPerformed(evt);
            }
        });

        sellingPriceCheckBox.setFont(new java.awt.Font("Tahoma", 0, 18));
        sellingPriceCheckBox.setText("     Selling Price");
        sellingPriceCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sellingPriceCheckBoxStateChanged(evt);
            }
        });
        sellingPriceCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sellingPriceCheckBoxItemStateChanged(evt);
            }
        });
        sellingPriceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellingPriceCheckBoxActionPerformed(evt);
            }
        });

        salePriceCheckBox.setFont(new java.awt.Font("Tahoma", 0, 18));
        salePriceCheckBox.setText("     Sale Price");
        salePriceCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                salePriceCheckBoxStateChanged(evt);
            }
        });
        salePriceCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                salePriceCheckBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MSRPCheckBox)
                    .addComponent(sellingPriceCheckBox)
                    .addComponent(salePriceCheckBox))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {MSRPCheckBox, salePriceCheckBox, sellingPriceCheckBox});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(MSRPCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sellingPriceCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salePriceCheckBox))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {MSRPCheckBox, salePriceCheckBox, sellingPriceCheckBox});

        jPanel11.setBackground(new java.awt.Color(225, 225, 225));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sale Dates", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 17))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel4.setText("Sale Starting Date");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel5.setText("Sale End Date");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 17));
        jTextField1.setText("             ");

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 17));
        jTextField2.setText("            ");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2, 0, 0, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(225, 225, 225));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choose category Ids to which this rule should apply", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        categoryList.setBackground(new java.awt.Color(240, 240, 240));
        categoryList.setFont(new java.awt.Font("Tahoma", 0, 18));
        categoryList.setPreferredSize(new java.awt.Dimension(980, 500));
        categoryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                categoryListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(categoryList);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16));
        jLabel2.setText("Category ID");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel2))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(225, 225, 225));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Note", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), java.awt.Color.red)); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 204, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 16));
        jLabel1.setForeground(java.awt.Color.red);
        jLabel1.setText("**Do not use '*' as UPC delimiter");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 16));
        jLabel3.setForeground(java.awt.Color.red);
        jLabel3.setText("**Enter different source and destination file");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        stausTextField.setFont(new java.awt.Font("Tahoma", 3, 18));
        stausTextField.setForeground(java.awt.Color.red);
        stausTextField.setText("                             ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1152, 1152, 1152)
                        .addComponent(stausTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(submitButton)
                        .addGap(884, 884, 884)
                        .addComponent(stausTextField))
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(766, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(889, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subtractAmoutTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractAmoutTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subtractAmoutTextFieldActionPerformed

    private void sellingPriceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellingPriceCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sellingPriceCheckBoxActionPerformed

    private void dividePriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dividePriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dividePriceTextFieldActionPerformed

    private void categoryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_categoryListValueChanged
        // TODO add your handling code here:
        if(evt.getValueIsAdjusting()==false)
        {
            if(categoryList.getSelectedIndex()==-1)
            {
                System.out.println("No item Selected");
            }else
            {
                System.out.println("item Selected : "+categoryList.getSelectedValuesList());
                CategorySelctedValueList.addAll(categoryList.getSelectedValuesList());
            }
        }
        
    }//GEN-LAST:event_categoryListValueChanged

    private void MSRPCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MSRPCheckBoxStateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_MSRPCheckBoxStateChanged

    private void sellingPriceCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sellingPriceCheckBoxStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_sellingPriceCheckBoxStateChanged

    private void salePriceCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_salePriceCheckBoxStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_salePriceCheckBoxStateChanged

    private void MSRPCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MSRPCheckBoxItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
            System.out.println("--selected Item MSRP");
        }else{
            System.out.println("--Deselected Item MSRP");
        }
    }//GEN-LAST:event_MSRPCheckBoxItemStateChanged

    private void sellingPriceCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sellingPriceCheckBoxItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
            System.out.println("--selected Item Selling Price");
        }else{
            System.out.println("--Deselected Item SP");
        }
    }//GEN-LAST:event_sellingPriceCheckBoxItemStateChanged

    private void salePriceCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_salePriceCheckBoxItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
            System.out.println("--selected Item SALE");
        }else{
            System.out.println("--Deselected Item SALE");
        }
    }//GEN-LAST:event_salePriceCheckBoxItemStateChanged

    private void sorceFileSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sorceFileSelectButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fc=new JFileChooser();
        fc.showOpenDialog(this);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel FILES", "xls", "xlsx");
        fc.setFileFilter(filter);
        sourceFilePathTextField.setText(fc.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_sorceFileSelectButtonActionPerformed

    private void destFileSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destFileSelectButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fc=new JFileChooser();
        fc.showOpenDialog(this);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel FILES", "xls", "xlsx");
        fc.setFileFilter(filter);
        destFilePathTextField.setText(fc.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_destFileSelectButtonActionPerformed

    private void upcFileSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upcFileSelectButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fc=new JFileChooser();
        fc.showOpenDialog(this);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "csv","doc","docx");
        fc.setFileFilter(filter);
        upcFilePathTextField.setText(fc.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_upcFileSelectButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        sourceFile=sourceFilePathTextField.getText().trim();
        destFile=destFilePathTextField.getText().trim();
        upcFile=upcFilePathTextField.getText().trim();
        upcFileDelimiter=upcDelimiterTextField.getText().trim();
        boolean flag=false;
               
        //Check For Empty Fields and File Exisitance
        if(sourceFile.isEmpty() || !(new File(sourceFile)).exists() || !(sourceFile.endsWith(".xls")|| sourceFile.endsWith(".xlsx")))
        {
            sourceFileErrorLabel.setText("**Please Enter Correct Excel File Path");
            flag=true;
        }else{
            sourceFileErrorLabel.setText("");
        }
        if(destFile.isEmpty()|| !(new File(destFile)).exists() || !(sourceFile.endsWith(".xls")|| sourceFile.endsWith(".xlsx")))
        {
            destFileErrorLabel.setText("**Please Enter Correct Excel File Path");
            flag=true;
        }else
        {
            destFileErrorLabel.setText("");
        }
        if(upcFile.isEmpty()|| !(new File(upcFile)).exists() || !(upcFile.endsWith(".txt")|| upcFile.endsWith(".csv")||upcFile.endsWith(".doc")||upcFile.endsWith(".docx")))
        {
            upcFileErrorLabel.setText("**Please Enter Correct Text File Path");
            flag=true;
        }else{
            upcFileErrorLabel.setText("");
        }
        if(upcFileDelimiter.isEmpty() || upcFileDelimiter.equals("*"))
        {
            
            upcFileDelimiterErrorLabel.setText("**Please Enter UPC File Delimiter(should not be *)");
            flag=true;
        }
        else{
            upcFileDelimiterErrorLabel.setText("");
        }
        
        if(!sourceFile.isEmpty() && !destFile.isEmpty()&& sourceFile.equals(destFile))
        {
           stausTextField.setText("  ** Please Enter Different Source and Destination Path ");
           flag=true;
        }
        
        if(!flag){
            stausTextField.setText(" ");
            //exportSourceDataToDestFile(sourceFile,destFile,upcFile,upcFileDelimiter);
         
            //progressBar.setStringPainted(sourceFileTextField);


            Sleeper task = new Sleeper();
            task.execute();
        
            progressBar.setVisible(true);
            submitButton.setEnabled(false);
            destFilePathTextField.setEnabled(false);
            sourceFilePathTextField.setEnabled(false);
            upcFilePathTextField.setEnabled(false);
            upcDelimiterTextField.setEnabled(false);
            sorceFileSelectButton.setEnabled(false);
            destFileSelectButton.setEnabled(false);
            upcFileSelectButton.setEnabled(false);
      //  System.out.println("  file "+sourceFile+"\n"+destFile);
        } 
        
        
    }//GEN-LAST:event_submitButtonActionPerformed

    private void upcDelimiterTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upcDelimiterTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_upcDelimiterTextFieldActionPerformed

    private void MSRPCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MSRPCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MSRPCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox MSRPCheckBox;
    private javax.swing.JTextField addAmoutTextField;
    private javax.swing.JList categoryList;
    private javax.swing.JLabel destFileErrorLabel;
    private javax.swing.JTextField destFilePathTextField;
    private javax.swing.JButton destFileSelectButton;
    private javax.swing.JTextField dividePriceTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField multiplyPriceTextField;
    private javax.swing.JTextField percentDecresePriceTextField;
    private javax.swing.JTextField percentIncresePriceTextField;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JCheckBox salePriceCheckBox;
    private javax.swing.JCheckBox sellingPriceCheckBox;
    private javax.swing.JButton sorceFileSelectButton;
    private javax.swing.JLabel sourceFileErrorLabel;
    private javax.swing.JTextField sourceFilePathTextField;
    private javax.swing.JLabel stausTextField;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField subtractAmoutTextField;
    private javax.swing.JTextField upcDelimiterTextField;
    private javax.swing.JLabel upcFileDelimiterErrorLabel;
    private javax.swing.JLabel upcFileErrorLabel;
    private javax.swing.JTextField upcFilePathTextField;
    private javax.swing.JButton upcFileSelectButton;
    // End of variables declaration//GEN-END:variables

    private void fillCategoryIdList() {
         //To change body of generated methods, choose Tools | Templates.
        
        //Source File,workbook and Sheet
        try{
            FileInputStream file = new FileInputStream(new File(categoryFile));
            XSSFWorkbook sourceWorkbook = new XSSFWorkbook(file);
            XSSFSheet sourceSheet = sourceWorkbook.getSheetAt(0);
            
            Iterator<Row> sourceRowIterator = sourceSheet.iterator();
            int i=0;
            while (sourceRowIterator.hasNext()) 
            {
                Row sourceRow = null;
                if(i<categoryFileRowsStartingFrom-1)
		{
                    sourceRow = sourceRowIterator.next();
		    i++;
		    continue;
                }
                String categoryID_name=""    ;
                sourceRow = sourceRowIterator.next();
                
                categoryID_name=sourceRow.getCell(2).getStringCellValue()+"   \t   "+sourceRow.getCell(3).getStringCellValue();
                
                //categoryList.add(categoryID_name);
		listModel.addElement(categoryID_name);
                //jList2.setModel(listModel);
            }
        }catch(Exception e)
        {
            System.err.println("File Not Found");
        }
    }

    private  class Sleeper extends SwingWorker{@Override
        public Void doInBackground() throws InterruptedException {
               
           /* try
            {     
                int progress = 0;
                while (progress < 100) {

                    //pause thread and then update the progress
                    Thread.sleep(100);
                    progress++;
                    
                    //Call the process method to update the GUI
                    publish(progress);

                }                       
            }
            catch(InterruptedException e)
            {
            }*/
            return exportSourceDataToDestFile(sourceFile,destFile,upcFile,upcFileDelimiter);
        }
        
        @Override
        protected void process(List chunks) {
            for (Iterator it = chunks.iterator(); it.hasNext();) {
                Integer chunk = (Integer) it.next();
                progressBar.setValue(chunk);
             }
     }
        //when the 'task' has finished re-enable the go button
        @Override
        public void done() {
            submitButton.setEnabled(true);
            destFilePathTextField.setEnabled(true);
            sourceFilePathTextField.setEnabled(true);
            upcFilePathTextField.setEnabled(true);
            upcDelimiterTextField.setEnabled(true);
            progressBar.setVisible(false);
            sorceFileSelectButton.setEnabled(true);
            destFileSelectButton.setEnabled(true);
            upcFileSelectButton.setEnabled(true);
            
            stausTextField.setVisible(true);
            stausTextField.setText("Data Exported Succesfully!!!!");
        }

        private Void exportSourceDataToDestFile(String sourceFile, String destinationFile, String upcFile, String upcFileDelimiter) {
             //To change body of generated methods, choose Tools | Templates.
           
            getColorsAsList();		
            //Change UPC list to Set
            getUPCFromFile(upcFile,upcFileDelimiter);
            upcCodesList=new ArrayList<String>(upcCodes);
        
        //getColorsAsList();
	//Read Source file
	try {
                //Source File,workbook and Sheet
		  FileInputStream file = new FileInputStream(new File(sourceFile));
		  XSSFWorkbook sourceWorkbook = new XSSFWorkbook(file);
		  XSSFSheet sourceSheet = sourceWorkbook.getSheetAt(0);
		  //Destination File, workbook and Sheet
		  FileInputStream out = new FileInputStream(new File(destinationFile));
		  XSSFWorkbook destinationWorkbook = new XSSFWorkbook(out);
                  XSSFSheet destinationSheet = destinationWorkbook.getSheetAt(0);
	        
	        
		  Iterator<Row> sourceRowIterator = sourceSheet.iterator();
		  Set<String> skuItem=new LinkedHashSet<String>();
		  //Set<Product> listOfProducts=new LinkedHashSet<Product>();
		  int i=0,upcSetIndex=0;
		  String previousSKU="",CurrentSku;
		  int destinationRowNum = OutputFileRowsStartingFrom;
		  while (sourceRowIterator.hasNext()) 
		  {
			//Product product=new Product();
			Row sourceRow = null;
			if(i<SourceFileRowsStartingFrom-1)
			{
				sourceRow = sourceRowIterator.next();
				i++;
				continue;
			}
			i++;
		
			sourceRow = sourceRowIterator.next();
			Cell sourceSkuItem=sourceRow.getCell(1);
			Cell sourceProductSize=sourceRow.getCell(12);
	        
			//size col-12 ,SKU col-1
	    	//Generate Sku Item For output Files
	    	//skuItem.add(sourceSkuItem.getStringCellValue().split("/")[1]);
			
			CurrentSku=(sourceSkuItem.getStringCellValue()!=null && !sourceSkuItem.getStringCellValue().isEmpty())?(sourceSkuItem.getStringCellValue().contains("/")?sourceSkuItem.getStringCellValue().split("/")[1]:sourceSkuItem.getStringCellValue()):"";
			
			if(!CurrentSku.equals(previousSKU) )
			{
				Row destinationRow=destinationSheet.createRow(destinationRowNum++);
				
				//Cell 0 for SkuItem cell
				destinationRow.createCell(0).setCellValue(CurrentSku);
				
				//Cell 1 for SkuItem Name cell
				Cell destinationItemNamecell=destinationRow.createCell(1);
		    	Cell sourceProdNameCell=sourceRow.getCell(10);
		    	
		    			    	
		    	//check Color exsist in Product Name
		    	String productName=sourceProdNameCell.getStringCellValue(),checkColor="";
		    	//System.out.println(productName);
		    	for(String color:colorList)
		    	{
		    		
		    		if(productName.toLowerCase().contains(color.toLowerCase().trim()))
		    		{
		    			
		    			checkColor=color;
		    			//System.out.println("color :"+color);
		    			productName=productName.replaceAll(color.trim(), " ");
		    			//System.out.println(productName);
		    		}
		    		//System.out.println("color"+color);
		    	}
		    	//Cell 2 for Product Name
		    	destinationItemNamecell.setCellValue("HEAVEN"+" "+productName);
		    	
		    	//Cell 4 for Brand Name
		    	Cell destinationBrandName=destinationRow.createCell(4);
		    	destinationBrandName.setCellValue("HEAVEN");
		    	
		    	//Cell 67 for Parent-Child
		    	Cell destinationParentChildRelName=destinationRow.createCell(67);
		    	destinationParentChildRelName.setCellValue("Parent");
		    	
		    	//Cell 70 for Variation Theme
		    	Cell destinationVariationThemeCell=destinationRow.createCell(70);
		    	destinationVariationThemeCell.setCellValue("SizeColor");
		    				    						
			}
			else{
				
				//create destination row
		    	Row destinationRow=destinationSheet.createRow(destinationRowNum++);
		    	
		    	//Cell 0 for SkuItem cell
		    	Cell destinationSkucell=destinationRow.createCell(0);
		    	
		    	
				//System.out.println(sourceSkuItem!=null ?sourceSkuItem.getStringCellValue():"-"+"  "+sourceProductSize.getStringCellValue());
				//System.out.println(sourceSkuItem.getStringCellValue().split("/")[1]);
				if(sourceSkuItem.getStringCellValue().contains("/"))
				{
					//System.out.println(sourceProductSize!=null?sourceProductSize.getStringCellValue():" ");
					String s=sourceSkuItem.getStringCellValue().split("/")[1];
					s=s.concat("-");
					s=s.concat(sourceProductSize!=null?sourceProductSize.getStringCellValue():" ");
					skuItem.add(s);
					destinationSkucell.setCellValue(s);
					//skuItem.add(sourceSkuItem.getStringCellValue().split("/")[1]+"-"+sourceProductSize!=null?sourceProductSize.getStringCellValue():" ");
					//destinationSkucell.setCellValue(sourceSkuItem.getStringCellValue().split("/")[1]+"-"+sourceProductSize!=null?sourceProductSize.getStringCellValue():" ");
				}else
				{
					//skuItem.add(sourceSkuItem.getStringCellValue()+"-"+sourceProductSize.getStringCellValue());
					//destinationSkucell.setCellValue(sourceSkuItem.getStringCellValue()+"-"+sourceProductSize.getStringCellValue());
					
					System.out.println("Source Sku Item doesnt contain proper format for :"+sourceSkuItem.getStringCellValue());
					
					continue;
				}
	    	
	    	//Item Name derived from "Brand Name"+"Product Name"+","+" "+"Color"+", "+"Size"
	    	Cell destinationItemNamecell=destinationRow.createCell(1);
	    	Cell sourceProdNameCell=sourceRow.getCell(10);
	    	Cell sourceSizeCell=sourceRow.getCell(12);
	    	Cell sourceColorCell=sourceRow.getCell(13);
	    	
	    	
	    	//check Color exsist in Product Name
	    	//CollectionUtils.find(colorList, arg1);
	    	String productName=sourceProdNameCell!=null?sourceProdNameCell.getStringCellValue():"",checkColor="";
	    	//System.out.println(productName);
	    	for(String color:colorList)
	    	{
	    		if(productName.toLowerCase().contains(color.toLowerCase().trim()))
	    		{
	    			checkColor=color;
	    			
	    			productName=productName.replaceAll(color.trim(), " ");
	    			//System.out.println("COLOR---"+color+"---replace--"+productName.replaceAll(color.trim(), " "));
	    		}
	    	}
	    	//Cell 1 for SkuItem Name cell
	    	//System.out.println(productName);
	    	if(checkColor.isEmpty())
	    	{
	    		destinationItemNamecell.setCellValue("HEAVEN"+" "+productName+", "+(sourceColorCell!=null?sourceColorCell.getStringCellValue():" ")+", "+(sourceSizeCell!=null?sourceSizeCell.getStringCellValue():""));
	    	}else{
	    		destinationItemNamecell.setCellValue("HEAVEN"+" "+productName+", "+checkColor+", "+(sourceSizeCell!=null?sourceSizeCell.getStringCellValue():""));
	    	}
	    	
	    	//Cell 2 for external_product_id
	    	//check UPC Code are available
			if(upcCodesList.size()==upcSetIndex)
			{
				System.out.println("No more UPC code Left");
			}else{
				Cell destinationExtProdIdCell=destinationRow.createCell(2);
	    		destinationExtProdIdCell.setCellValue(upcCodesList.get(upcSetIndex++));
			}
			
	    	//cell 3 for External_product_type_id
	    	Cell destinationExtProdTypeIdCell=destinationRow.createCell(3);
	    	destinationExtProdTypeIdCell.setCellValue("UPC");
	    	
	    	//Cell 4 For Brand Name always "HEAVEN"
	    	Cell destinationBrandName=destinationRow.createCell(4);
	    	destinationBrandName.setCellValue("HEAVEN");
	    	
	    	//Cell 8 for Selling Price
	    	Cell destinationSellingPriceCell=destinationRow.createCell(8);
	    	destinationSellingPriceCell.setCellValue(sourceRow.getCell(15).getStringCellValue());
	  
	    	//Cell 9 for List Price
	    	Cell destinationListPriceCell=destinationRow.createCell(9);
	    	destinationListPriceCell.setCellValue(sourceRow.getCell(14).getStringCellValue());
	    	
	       	//cell 10 for Currency
	    	Cell destinationCurrencyCell=destinationRow.createCell(10);
	    	destinationCurrencyCell.setCellValue("USD");
	    	
	    	//cell 11 for Product_Tax_code
	    	Cell destinationProdTaxCodeCell=destinationRow.createCell(11);
	    	destinationProdTaxCodeCell.setCellValue("A_GEN_NOTAX");
	    	
	    	//cell 16 for quantity
	    	Cell destinationQuantityCell=destinationRow.createCell(16);
	    	destinationQuantityCell.setCellValue(sourceRow.getCell(18).getStringCellValue());
	    	
	    	//cell 17 for Sale Price
	    	Cell destinationSalePriceCell=destinationRow.createCell(17);
	    	destinationSalePriceCell.setCellValue(sourceRow.getCell(16).getStringCellValue());
	    	
	    	//Cell 29 for item weight Unit
	    	Cell destinationShippingWieghtUnitCell=destinationRow.createCell(29);
	    	destinationShippingWieghtUnitCell.setCellValue("LB");
	    	
	       	//Cell 30 for item weight
	    	Cell destinationShippingWieghtCell=destinationRow.createCell(30);
	    	destinationShippingWieghtCell.setCellValue(sourceRow.getCell(20).getStringCellValue());
	    		    	
	    	//Cell 67 for Parent-Child
	    	Cell destinationParentChildRelName=destinationRow.createCell(67);
	    	destinationParentChildRelName.setCellValue("Child");
	    	
	    	//Cell 68 for Parent SKU
	    	Cell destinationParentSKUCell=destinationRow.createCell(68);
	    	destinationParentSKUCell.setCellValue(CurrentSku);
	    	
	    	//Cell 69 for Relationship Type
	    	Cell destinationRelTypeCell=destinationRow.createCell(69);
	    	destinationRelTypeCell.setCellValue("Variation");
	    	
	    	//Cell 70 for Variation Theme
	    	Cell destinationVariationThemeCell=destinationRow.createCell(70);
	    	destinationVariationThemeCell.setCellValue("SizeColor");
	    	
	    	//Cell 86 for Color_name
	    	Cell destinationColorNameCell=destinationRow.createCell(86);
	    	destinationColorNameCell.setCellValue((sourceColorCell!=null?sourceColorCell.getStringCellValue():""));
	    	
	    	//Cell 94 for department Name gen 3-6
	    	//Cell destinationDepartmentNameCell=destinationRow.createCell(91);
	    	
		 }	
		 previousSKU=CurrentSku;
	   	
	    }
            file.close();
            out.close();
            FileOutputStream outFile = new FileOutputStream(new File(destinationFile));
            destinationWorkbook.write(outFile);

            System.out.println(".................................................................... Calling My Func ........ ");
            try {
                outFile =  GetAllFeatures.getFeatures(sourceFile, destinationFile);
            } catch (IOException ex) {
                ex.printStackTrace();
            } catch (ResourceInstantiationException ex) {
                ex.printStackTrace();
            }
            outFile.close();
            System.out.println(destinationFile+" written successfully on disk.");
	}catch(Exception e)
	{
		e.printStackTrace();
	}

        return null;
	
        }

        private void getColorsAsList() {
             //To change body of generated methods, choose Tools | Templates.
            try {
			Scanner scan =new Scanner(new BufferedReader(new FileReader("ColorList.txt")));
			scan.useDelimiter("\n");
			while(scan.hasNext())
			{
				colorList.add(scan.next().toString());
			}
			
			
            } catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
            System.err.println("Color List File Not Found");
            System.exit(0);
        }
        }

        private void getUPCFromFile(String UPCListFile, String upcFileDelimiter) {
             //To change body of generated methods, choose Tools | Templates.
            try {
			Scanner scan =new Scanner(new BufferedReader(new FileReader(UPCListFile)));
			scan.useDelimiter(upcFileDelimiter);
			while(scan.hasNext())
			{
				upcCodes.add(scan.next());
			}
			
			//System.out.println(upcCodes2.size());
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        }
    }
}
